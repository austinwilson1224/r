difference
min(difference)
difference = abs(precip - mean)
difference
min(difference)
names(min(difference))
difference[min(difference)]
x = difference[min(difference)]
x
which.min(difference)
setwd("~/coding/r")
which.min(abs(precip - mean(precip)))
print(mean(precip))
which.min(abs(precip - mean(precip)))
print(mean(precip))
which.min(abs(precip - mean(precip)))
mean = mean(precip)
sort(precip)
mean = mean(precip)
first-mean
mean-last
data[42]
sort(precip, decreasing=TRUE)
mean = mean(precip)
first-mean
mean-last
sort(abs(precip - mean))
sort(abs(precip - mean))[1]
sort(abs(precip-mean))[1]
getwd()
air = read.csv("http://webpages.csus.edu/fitzgerald/files/stat128/fall20/ad_viz_plotval_data.csv")
View(air)
unique(air$Site.Name)
data = air[air$Site.Name == 'Davis-UCD Campus']
data = air[which(air$Site.Name == "Davis-UCD Campus")]
data = air[air$Site.Name == 'Davis-UCD Campus',]
data = air[which(air$Site.Name == "Davis-UCD Campus"),]
View(data)
# 3. Plot a line plot of the columns "Daily.Mean.PM2.5.Concentration" as a function of "Date".
#    Start one month before the fire and go to the end of the data set. Comment on what the graph shows.
with(data plot(Date, Daily.Mean.PM2.5.Concentration))
# 3. Plot a line plot of the columns "Daily.Mean.PM2.5.Concentration" as a function of "Date".
#    Start one month before the fire and go to the end of the data set. Comment on what the graph shows.
with(data, plot(Date, Daily.Mean.PM2.5.Concentration))
plot(data$Date, data$Daily.Mean.PM2.5.Concentration)
?plot
plot(as.date(data$Date), data$Daily.Mean.PM2.5.Concentration)
plot(as.Date(data$Date, "%m/%d/%y"), data$Daily.Mean.PM2.5.Concentration)
# 3. Plot a line plot of the columns "Daily.Mean.PM2.5.Concentration" as a function of "Date".
#    Start one month before the fire and go to the end of the data set. Comment on what the graph shows.
with(data, plot(as.Date(Date, "%m/%d/%y", Daily.Mean.PM2.5.Concentration))
# 3. Plot a line plot of the columns "Daily.Mean.PM2.5.Concentration" as a function of "Date".
#    Start one month before the fire and go to the end of the data set. Comment on what the graph shows.
with(data, plot(as.Date(Date, "%m/%d/%y"), Daily.Mean.PM2.5.Concentration))
# 3. Plot a line plot of the columns "Daily.Mean.PM2.5.Concentration" as a function of "Date".
#    Start one month before the fire and go to the end of the data set. Comment on what the graph shows.
with(data, plot(as.Date(Date, "%m/%d/%y"), Daily.Mean.PM2.5.Concentration))
?plot
# 3. Plot a line plot of the columns "Daily.Mean.PM2.5.Concentration" as a function of "Date".
#    Start one month before the fire and go to the end of the data set. Comment on what the graph shows.
with(data, plot(as.Date(Date, "%m/%d/%y"), Daily.Mean.PM2.5.Concentration, xlab="Date", ylab="Conecntration"))
?boxplot
1909-30
# 4. Create a comparative boxplot of "Daily.Mean.PM2.5.Concentration" in the month before the fire and the month after the fire.
#    Comment on what the boxplots show.
# Hint: create a new column that indicates if the observation happened before or after the fire.
# Use your work above to implement the function below, and verify that it works for n = 100 and n = 50.
before = data[1879:1909,c("Date", "Daily.Mean.PM2.5.Concentration")]
after = data[1909:,c("Date", "Daily.Mean.PM2.5.Concentration")]
# 4. Create a comparative boxplot of "Daily.Mean.PM2.5.Concentration" in the month before the fire and the month after the fire.
#    Comment on what the boxplots show.
# Hint: create a new column that indicates if the observation happened before or after the fire.
# Use your work above to implement the function below, and verify that it works for n = 100 and n = 50.
before = data[1879:1909,c("Date", "Daily.Mean.PM2.5.Concentration")]
after = data[1909:1935,c("Date", "Daily.Mean.PM2.5.Concentration")]
boxplot(split(before$Daily.Mean.PM2.5.Concentration, after$Daily.Mean.PM2.5.Concentration))
after = data[1909:1934,c("Date", "Daily.Mean.PM2.5.Concentration")]
boxplot(split(before$Daily.Mean.PM2.5.Concentration, after$Daily.Mean.PM2.5.Concentration))
before = data[1879:1909,"Daily.Mean.PM2.5.Concentration"]
after = data[1909:1935,"Daily.Mean.PM2.5.Concentration"]
# 4. Create a comparative boxplot of "Daily.Mean.PM2.5.Concentration" in the month before the fire and the month after the fire.
#    Comment on what the boxplots show.
# Hint: create a new column that indicates if the observation happened before or after the fire.
# Use your work above to implement the function below, and verify that it works for n = 100 and n = 50.
before = data[1879:1909,c("Daily.Mean.PM2.5.Concentration")]
after = data[1909:1935,c("Daily.Mean.PM2.5.Concentration")]
boxplot(split(before$Daily.Mean.PM2.5.Concentration, after$Daily.Mean.PM2.5.Concentration))
# 4. Create a comparative boxplot of "Daily.Mean.PM2.5.Concentration" in the month before the fire and the month after the fire.
#    Comment on what the boxplots show.
# Hint: create a new column that indicates if the observation happened before or after the fire.
# Use your work above to implement the function below, and verify that it works for n = 100 and n = 50.
before = data[1879:1909,c("Daily.Mean.PM2.5.Concentration", "Date")]
after = data[1909:1935,c("Daily.Mean.PM2.5.Concentration", "Date")]
1909-1879
1935-1909
1909-1882
# 4. Create a comparative boxplot of "Daily.Mean.PM2.5.Concentration" in the month before the fire and the month after the fire.
#    Comment on what the boxplots show.
# Hint: create a new column that indicates if the observation happened before or after the fire.
# Use your work above to implement the function below, and verify that it works for n = 100 and n = 50.
before = data[1883:1909,c("Daily.Mean.PM2.5.Concentration", "Date")]
after = data[1909:1935,c("Daily.Mean.PM2.5.Concentration", "Date")]
boxplot(split(before$Daily.Mean.PM2.5.Concentration, after$Daily.Mean.PM2.5.Concentration))
air = read.csv("http://webpages.csus.edu/fitzgerald/files/stat128/fall20/ad_viz_plotval_data.csv")
air = read.csv("http://webpages.csus.edu/fitzgerald/files/stat128/fall20/ad_viz_plotval_data.csv")
# TODO code for Q1
d = air$Date
# data frame
d_frame = air[,"Date"]
# data frame
d_frame = air["Date"]
f = air[,"Date"]
d = air[,"Date"]
air = read.csv("http://webpages.csus.edu/fitzgerald/files/stat128/fall20/ad_viz_plotval_data.csv")
plot(air$Daily.Mean.PM2.5.Concentration ~ date(air$Date, "%m/%d/%y"))
?date
plot(air$Daily.Mean.PM2.5.Concentration ~ as.Date(air$Date, "%m/%d/%y"))
# dates
dates = as.Date(air["Date"], format = "%d/%m/%Y")
# dates
dates = as.Date(air[,"Date"], format = "%d/%m/%Y")
air$Date = as.Date(air$Date, "%d/%m/%Y")
class(air$Date)
l1 = c(TRUE,TRUE,FALSE)
class(l1)
x = c(1,2,2,3,18)
x == 2
x_equal_2 = x == 2
X <= 2
x <= 2
d3 = head(dates)
as.Date("2020-01-12") < d3
eldorado = air[air["County"] == "El Dorado"]
eldorado = air[air[,"County"] == "El Dorado"]
eldorado = air[air$COUNTY == "El Dorado"]
eldorado = air[air["COUNTY"] == "El Dorado"]
View(air)
air = read.csv("http://webpages.csus.edu/fitzgerald/files/stat128/fall20/ad_viz_plotval_data.csv")
View(air)
# TODO code for Q1
# just a vector
d = air$Date
d = air[,"Date"]
# data frame
d_frame = air["Date"]
# dates
dates = as.Date(air[,"Date"], format = "%d/%m/%Y")
air = read.csv("http://webpages.csus.edu/fitzgerald/files/stat128/fall20/ad_viz_plotval_data.csv")
View(air)
# TODO code for Q1
# just a vector
d = air$Date
d = air[,"Date"]
# data frame
d_frame = air["Date"]
# dates
dates = as.Date(air[,"Date"], format = "%d/%m/%Y")
plot(air$Daily.Mean.PM2.5.Concentration ~ as.Date(air$Date, "%m/%d/%y"))
air$Date = as.Date(air$Date, "%d/%m/%Y")
class(air$Date)
air = read.csv("http://webpages.csus.edu/fitzgerald/files/stat128/fall20/ad_viz_plotval_data.csv")
View(air)
eldorado = air[air["COUNTY"] == "El Dorado"]
eldorado
eldorado = air[air[,"COUNTY"] == "El Dorado"]
eldorado
air[,'COUNTY'] == "El Dorado"
eldorado2 = air[air$COUNTY == "El Dorado"]
eldorado2
head(eldorado2)
eldorado2 = air[air$COUNTY == "El Dorado",]
eldorado2
eldorado = air[air[,"COUNTY"] == "El Dorado",]
air = read.csv("http://webpages.csus.edu/fitzgerald/files/stat128/fall20/ad_viz_plotval_data.csv")
View(air)
data = air[which(air$Site.Name == "Davis-UCD Campus"),]
data = air[air$Site.Name == 'Davis-UCD Campus',]
View(data)
# 3. Plot a line plot of the columns "Daily.Mean.PM2.5.Concentration" as a function of "Date".
#    Start one month before the fire and go to the end of the data set. Comment on what the graph shows.
with(data, plot(as.Date(Date, "%m/%d/%y"), Daily.Mean.PM2.5.Concentration, xlab="Date", ylab="Conecntration"))
?plot
# 3. Plot a line plot of the columns "Daily.Mean.PM2.5.Concentration" as a function of "Date".
#    Start one month before the fire and go to the end of the data set. Comment on what the graph shows.
with(data, plot(as.Date(Date, "%m/%d/%y"), Daily.Mean.PM2.5.Concentration, xlab="Date", ylab="Conecntration", type = l))
?plot
# 3. Plot a line plot of the columns "Daily.Mean.PM2.5.Concentration" as a function of "Date".
#    Start one month before the fire and go to the end of the data set. Comment on what the graph shows.
with(data, plot(as.Date(Date, "%m/%d/%y"), Daily.Mean.PM2.5.Concentration, xlab="Date", ylab="Conecntration", type = "l"))
# data = air[which(air$Site.Name == "Davis-UCD Campus"),]
data = air[air$Site.Name == 'Davis-UCD Campus',c("Daily.Mean.PM2.5.Concentration", "Date")]
View(data)
# data = air[which(air$Site.Name == "Davis-UCD Campus"),]
data = air[air$Site.Name == 'Davis-UCD Campus',c("Date", "Daily.Mean.PM2.5.Concentration")]
View(data)
data$Date = as.Date(x = data$Date, format = "%m/%d/%Y")
View(data)
```{r}
air = read.csv("http://webpages.csus.edu/fitzgerald/files/stat128/fall20/ad_viz_plotval_data.csv")
View(air)
# dates
dates = as.Date(air[,"Date"], format = "%d/%m/%Y")
View(air)
View(data)
# 4. Create a comparative boxplot of "Daily.Mean.PM2.5.Concentration" in the month before the fire and the month after the fire.
#    Comment on what the boxplots show.
#    before and after august 15
# Hint: create a new column that indicates if the observation happened before or after the fire.
# Use your work above to implement the function below, and verify that it works for n = 100 and n = 50.
data[data$Date <= "2020-08-15"]
# 4. Create a comparative boxplot of "Daily.Mean.PM2.5.Concentration" in the month before the fire and the month after the fire.
#    Comment on what the boxplots show.
#    before and after august 15
# Hint: create a new column that indicates if the observation happened before or after the fire.
# Use your work above to implement the function below, and verify that it works for n = 100 and n = 50.
data[,data$Date <= "2020-08-15"]
# 4. Create a comparative boxplot of "Daily.Mean.PM2.5.Concentration" in the month before the fire and the month after the fire.
#    Comment on what the boxplots show.
#    before and after august 15
# Hint: create a new column that indicates if the observation happened before or after the fire.
# Use your work above to implement the function below, and verify that it works for n = 100 and n = 50.
data[data$Date <= "2020-08-15",]
# 4. Create a comparative boxplot of "Daily.Mean.PM2.5.Concentration" in the month before the fire and the month after the fire.
#    Comment on what the boxplots show.
#    before and after august 15
# Hint: create a new column that indicates if the observation happened before or after the fire.
# Use your work above to implement the function below, and verify that it works for n = 100 and n = 50.
data["Date",]
# 4. Create a comparative boxplot of "Daily.Mean.PM2.5.Concentration" in the month before the fire and the month after the fire.
#    Comment on what the boxplots show.
#    before and after august 15
# Hint: create a new column that indicates if the observation happened before or after the fire.
# Use your work above to implement the function below, and verify that it works for n = 100 and n = 50.
data[,"Date"]
# 4. Create a comparative boxplot of "Daily.Mean.PM2.5.Concentration" in the month before the fire and the month after the fire.
#    Comment on what the boxplots show.
#    before and after august 15
# Hint: create a new column that indicates if the observation happened before or after the fire.
# Use your work above to implement the function below, and verify that it works for n = 100 and n = 50.
data[,"Date"] < "2020-08-15"
# 4. Create a comparative boxplot of "Daily.Mean.PM2.5.Concentration" in the month before the fire and the month after the fire.
#    Comment on what the boxplots show.
#    before and after august 15
# Hint: create a new column that indicates if the observation happened before or after the fire.
# Use your work above to implement the function below, and verify that it works for n = 100 and n = 50.
before_boolean_mask = data[,"Date"] < "2020-08-15"
before = data[, before_boolean_mask]
before = data[before_boolean_mask]
before = data[before_boolean_mask,]
after_boolean_mask = data[,"Date"] >= "2020-08-15"
dim(data)
after = data[after_boolean_mask,]
dim(before)
dim(after)
dim(data)[1] == dim(before)[1] + dim(after)
dim(data)[1] == dim(before)[1] + dim(after)[1]
View(data)
View(before)
View(after)
# 4. Create a comparative boxplot of "Daily.Mean.PM2.5.Concentration" in the month before the fire and the month after the fire.
#    Comment on what the boxplots show.
#    before and after august 15
# Hint: create a new column that indicates if the observation happened before or after the fire.
# Use your work above to implement the function below, and verify that it works for n = 100 and n = 50.
before_boolean_mask = data[,"Date"] < "2020-08-15" & data[,"Date"] > "2020-07-15"
after_boolean_mask = data[,"Date"] >= "2020-08-15"
dim(data)
before = data[before_boolean_mask,]
after = data[after_boolean_mask,]
dim(before)
dim(after)
dim(data)[1] == dim(before)[1] + dim(after)[1]
dim(after)[1]
dim(before)[1]
# before = data[1883:1909,c("Daily.Mean.PM2.5.Concentration", "Date")]
# after = data[1909:1935,c("Daily.Mean.PM2.5.Concentration", "Date")]
boxplot(split(before$Daily.Mean.PM2.5.Concentration, after$Daily.Mean.PM2.5.Concentration))
# before = data[1883:1909,c("Daily.Mean.PM2.5.Concentration", "Date")]
# after = data[1909:1935,c("Daily.Mean.PM2.5.Concentration", "Date")]
boxplot(before)
View(before)
View(after)
# before = data[1883:1909,c("Daily.Mean.PM2.5.Concentration", "Date")]
# after = data[1909:1935,c("Daily.Mean.PM2.5.Concentration", "Date")]
boxplot(before$Daily.Mean.PM2.5.Concentration)
?boxplot
# before = data[1883:1909,c("Daily.Mean.PM2.5.Concentration", "Date")]
# after = data[1909:1935,c("Daily.Mean.PM2.5.Concentration", "Date")]
boxplot(before$Daily.Mean.PM2.5.Concentration, after$Daily.Mean.PM2.5.Concentration)
air = read.csv("http://webpages.csus.edu/fitzgerald/files/stat128/fall20/ad_viz_plotval_data.csv")
data$Date = as.Date(x = data$Date, format = "%m/%d/%Y")
View(data)
#View(data)
columns(data)
#View(data)
colnames(data)
with(data = data, plot(Daily.Mean.PM2.5.Concentration~Date, type = "l"))
before_boolean_mask = data[,"Date"] < "2020-08-15" & data[,"Date"] > "2020-07-15"
after_boolean_mask = data[,"Date"] >= "2020-08-15"
before = data[before_boolean_mask,]
after = data[after_boolean_mask,]
boxplot(before$Daily.Mean.PM2.5.Concentration, after$Daily.Mean.PM2.5.Concentration)
# TODO
n_most_recent = d[n:,]
test = data[100:,]
test = data[100:]
n = 100
test = data[n:length(data)]
test = data[n:length(data),]
test
plot_pm2.5 = function(d, n = 100)
{
# TODO
n_most_recent = d[n:length(d),]
return n_most_recent
plot_pm2.5 = function(d, n = 100)
{
# TODO
n_most_recent = d[n:length(d),]
plot(n_most_recent)
}
plot_pm2.5(d = data, n = 50)
plot_pm2.5(d = data)
plot_pm2.5 = function(d, n = 100)
{
# TODO
n_most_recent = d[n-length(d):length(d),]
plot(n_most_recent)
}
plot_pm2.5(d = data)
plot_pm2.5(d = data, n = 50)
#' Plot the n most recent PM2.5 particle measurements on the y axis, with date as the x axis.
#'
#' @param d data frame containing columns Daily.Mean.PM2.5.Concentration and Date for a single site
#' @param n number of observations to include
plot_pm2.5 = function(d, n = 100)
{
# TODO
n_most_recent = d[length(d)-n:length(d),]
plot(n_most_recent)
}
plot_pm2.5(d = data)
plot_pm2.5(d = data, n = 50)
?order
?tail
#' Plot the n most recent PM2.5 particle measurements on the y axis, with date as the x axis.
#'
#' @param d data frame containing columns Daily.Mean.PM2.5.Concentration and Date for a single site
#' @param n number of observations to include
plot_pm2.5 = function(d, n = 100)
{
# TODO
order()
n_most_recent = tail(x = d, n = n)
plot(n_most_recent)
}
plot_pm2.5(d = data)
plot_pm2.5(d = data, n = 50)
?order
#' Plot the n most recent PM2.5 particle measurements on the y axis, with date as the x axis.
#'
#' @param d data frame containing columns Daily.Mean.PM2.5.Concentration and Date for a single site
#' @param n number of observations to include
plot_pm2.5 = function(d, n = 100)
{
d[order(d$Date),]
n_most_recent = tail(x = d, n = n)
plot(n_most_recent)
}
plot_pm2.5(d = data) # n = 100 is default value
plot_pm2.5(d = data, n = 50)
#' Plot the n most recent PM2.5 particle measurements on the y axis, with date as the x axis.
#'
#' @param d data frame containing columns Daily.Mean.PM2.5.Concentration and Date for a single site
#' @param n number of observations to include
plot_pm2.5 = function(d, n = 100)
{
d[order(d$Date, decreasing = TRUE),]
n_most_recent = tail(x = d, n = n)
plot(n_most_recent)
}
plot_pm2.5(d = data) # n = 100 is default value
plot_pm2.5(d = data, n = 50)
#' Plot the n most recent PM2.5 particle measurements on the y axis, with date as the x axis.
#'
#' @param d data frame containing columns Daily.Mean.PM2.5.Concentration and Date for a single site
#' @param n number of observations to include
plot_pm2.5 = function(d, n = 100)
{
d[order(d$Date, decreasing = FALSE),]
n_most_recent = tail(x = d, n = n)
plot(n_most_recent)
}
plot_pm2.5(d = data) # n = 100 is default value
plot_pm2.5(d = data, n = 50)
#' Plot the n most recent PM2.5 particle measurements on the y axis, with date as the x axis.
#'
#' @param d data frame containing columns Daily.Mean.PM2.5.Concentration and Date for a single site
#' @param n number of observations to include
plot_pm2.5 = function(d, n = 100)
{
d = d[order(d$Date, decreasing = FALSE),]
n_most_recent = tail(x = d, n = n)
plot(n_most_recent)
}
plot_pm2.5(d = data) # n = 100 is default value
plot_pm2.5(d = data, n = 50)
#' Plot the n most recent PM2.5 particle measurements on the y axis, with date as the x axis.
#'
#' @param d data frame containing columns Daily.Mean.PM2.5.Concentration and Date for a single site
#' @param n number of observations to include
plot_pm2.5 = function(d, n = 100)
{
d = d[order(d$Date, decreasing = TRUE),]
n_most_recent = tail(x = d, n = n)
plot(n_most_recent)
}
plot_pm2.5(d = data) # n = 100 is default value
plot_pm2.5(d = data, n = 50)
#' Plot the n most recent PM2.5 particle measurements on the y axis, with date as the x axis.
#'
#' @param d data frame containing columns Daily.Mean.PM2.5.Concentration and Date for a single site
#' @param n number of observations to include
plot_pm2.5 = function(d, n = 100)
{
d = d[order(d$Date, decreasing = FALSE),] # to ensure data is sorted
n_most_recent = tail(x = d, n = n)
plot(n_most_recent)
}
plot_pm2.5(d = data) # n = 100 is default value
plot_pm2.5(d = data, n = 50)
?plot
# 3. Plot a line plot of the columns "Daily.Mean.PM2.5.Concentration" as a function of "Date".
#    Start one month before the fire and go to the end of the data set. Comment on what the graph shows.
# with(data, plot(as.Date(Date, "%m/%d/%y"), Daily.Mean.PM2.5.Concentration, xlab="Date", ylab="Conecntration", type = "l"))
# plot(as.Date(data$Date, "%m/%d/%y"), data$Daily.Mean.PM2.5.Concentration, )
plot(Daily.Mean.PM2.5.Concentration, type = "l", data = data)
# 3. Plot a line plot of the columns "Daily.Mean.PM2.5.Concentration" as a function of "Date".
#    Start one month before the fire and go to the end of the data set. Comment on what the graph shows.
# with(data, plot(as.Date(Date, "%m/%d/%y"), Daily.Mean.PM2.5.Concentration, xlab="Date", ylab="Conecntration", type = "l"))
# plot(as.Date(data$Date, "%m/%d/%y"), data$Daily.Mean.PM2.5.Concentration, )
plot(Daily.Mean.PM2.5.Concentration~Dat, type = "l", data = data)
# 3. Plot a line plot of the columns "Daily.Mean.PM2.5.Concentration" as a function of "Date".
#    Start one month before the fire and go to the end of the data set. Comment on what the graph shows.
# with(data, plot(as.Date(Date, "%m/%d/%y"), Daily.Mean.PM2.5.Concentration, xlab="Date", ylab="Conecntration", type = "l"))
# plot(as.Date(data$Date, "%m/%d/%y"), data$Daily.Mean.PM2.5.Concentration, )
plot(Daily.Mean.PM2.5.Concentration~Date, type = "l", data = data)
boolean_mask = data[,"Date"] > "2020-07-15"
boolean_mask
fire_data = data[boolean_mask,]
fire_data
#with(data = data, plot(Daily.Mean.PM2.5.Concentration~Date, type = "l"))
plot(Daily.Mean.PM2.5.Concentration~Date, type = "l", data = fire_data)
boolean_mask2 = data[,"Date"] > as.Date("2020-07-15",format="%Y-%m-%d")
boolean_mask2
boolean_mask2 = as.Date("2020-07-15",format="%Y-%m-%d") >data[,"Date"]
boolean_mask2
n = 100
roulette_values = 0:36
x = sample(roulette_values, size = n, replace = TRUE)
# TODO define low
low = function(x) {
win = x[(x > 0) & (x <=18),]
length(which(win))
}
low(x)
# TODO define low
low = function(x) {
win = x[((x > 0) & (x <=18)),]
length(which(win))
}
low(x)
# TODO define low
low = function(x) {
win = x[((x > 0) & (x <=18))]
length(which(win))
}
low(x)
# TODO define low
low = function(x) {
sum(x <  18)
}
low(x)
# TODO define low
low = function(x) {
sum(x <  18 & x > 0)
}
low(x)
# TODO define low
low = function(x) {
sum(x <  18 & x > 0)
}
low(x)
# TODO define low
low = function(x) {
win = x <= 18 & x > 0
# sum(x <  18 & x > 0)
}
low(x)
# TODO define low
low = function(x) {
win = x <= 18 & x > 0
# sum(x <  18 & x > 0)
print(win)
}
low(x)
# TODO define low
low = function(x) {
win = x <= 18 & x > 0
sum(win)
}
low(x)
