count = count + 1
d$average = d$average + d$winnings
}
d$average = d$average / count
g = g + geom_line(aes(time, average), data = d, col = "red")
g = g + geom_abline(slope = 0, intercept = 0, col = "blue")
print(g)
library(ggplot2)
theme_set(theme_bw())  # Feel free to set different themes
set.seed(42)
ntimes = 1000
d = data.frame(time = seq(ntimes))
s = simple_strategy(straightup)
d$winnings = play(s, nplayers = 1, ntimes = ntimes)
g = ggplot() + labs(title = "Single game of roulette", caption = "Simulated winnings over time for a single roulette player betting one dollar on evens every time.")
g = g + geom_line(aes(time, winnings), data = d, alpha=.2)
# average
count = 1
d$average = d$winnings
for(i in 2:100) {
set.seed(i)
ntimes = 1000
#d = data.frame(time = seq(ntimes))
s = simple_strategy(straightup)
column_name = paste(c("winnings",i), collapse="")
d$winnings = play(s, nplayers = 1, ntimes = ntimes)
g = g + geom_line(aes(time, winnings), data = d, alpha=.2)
# average
count = count + 1
d$average = d$average + d$winnings
}
d$average = d$average / count
g = g + geom_line(aes(time, average), data = d, col = "red")
g = g + geom_abline(slope = 0, intercept = 0, col = "blue")
print(g)
# for(i in 0:5) {
#     set.seed(i)
#     ntimes = 100
#     m = data.frame(time = seq(ntimes))
#     m$winnings = play(doublebet, nplayers = 1, ntimes = ntimes)
#
#     g = ggplot() + labs(title = "The Martingale Strategy in Roulette", caption = "Simulated winnings over time for     a single roulette player following the basic martingale betting strategy.")
#     g = g + geom_line(aes(time, winnings), data = m)
#     # print(g)
#
# }
print(g)
ntimes = 30
m = data.frame(time = seq(ntimes))
m$winnings = play(doublebet, nplayers = 1, ntimes = ntimes)
g = ggplot() + labs(title = "The Martingale Strategy in Roulette", caption = "Simulated winnings over time for a single roulette player following the basic martingale betting strategy.")
g = g + geom_line(aes(time, winnings), data = m)
print(g)
# View(m)
# for(i in 0:5) {
#     set.seed(i)
#     ntimes = 100
#     m = data.frame(time = seq(ntimes))
#     m$winnings = play(doublebet, nplayers = 1, ntimes = ntimes)
#
#     g = ggplot() + labs(title = "The Martingale Strategy in Roulette", caption = "Simulated winnings over time for     a single roulette player following the basic martingale betting strategy.")
#     g = g + geom_line(aes(time, winnings), data = m)
#     # print(g)
#
# }
# print(g)
ntimes = 30
m = data.frame(time = seq(ntimes))
m$winnings = play(doublebet, nplayers = 1, ntimes = ntimes)
g = ggplot() + labs(title = "The Martingale Strategy in Roulette", caption = "Simulated winnings over time for a single roulette player following the basic martingale betting strategy.")
g = g + geom_line(aes(time, winnings), data = m)
print(g)
# View(m)
# for(i in 0:5) {
#     set.seed(i)
#     ntimes = 100
#     m = data.frame(time = seq(ntimes))
#     m$winnings = play(doublebet, nplayers = 1, ntimes = ntimes)
#
#     g = ggplot() + labs(title = "The Martingale Strategy in Roulette", caption = "Simulated winnings over time for     a single roulette player following the basic martingale betting strategy.")
#     g = g + geom_line(aes(time, winnings), data = m)
#     # print(g)
#
# }
# print(g)
ntimes = 30
m = data.frame(time = seq(ntimes))
m$winnings = play(doublebet(x,1,straightup), nplayers = 1, ntimes = ntimes)
ntimes = 30
m = data.frame(time = seq(ntimes))
m$winnings = play(doublebet, nplayers = 1, ntimes = ntimes)
g = ggplot() + labs(title = "The Martingale Strategy in Roulette", caption = "Simulated winnings over time for a single roulette player following the basic martingale betting strategy.")
g = g + geom_line(aes(time, winnings), data = m)
print(g)
# View(m)
doublebet = function(x, initialbet = 1, strategy = straightup)
{
winnings = rep(NA, length(x))
betsize = initialbet
current_winnings = 0
for(i in seq_along(x)){
if(strategy(x[i]) == 1){
current_winnings = current_winnings + betsize
betsize = initialbet
} else {
current_winnings = current_winnings - betsize
betsize = 2 * betsize
}
winnings[i] = current_winnings
}
winnings
}
ntimes = 30
m = data.frame(time = seq(ntimes))
m$winnings = play(doublebet, nplayers = 1, ntimes = ntimes)
g = ggplot() + labs(title = "The Martingale Strategy in Roulette", caption = "Simulated winnings over time for a single roulette player following the basic martingale betting strategy.")
g = g + geom_line(aes(time, winnings), data = m)
print(g)
# View(m)
doublebet = function(x, initialbet = 1, strategy = column1
{
doublebet = function(x, initialbet = 1, strategy = column1)
{
winnings = rep(NA, length(x))
betsize = initialbet
current_winnings = 0
for(i in seq_along(x)){
if(strategy(x[i]) == 1){
current_winnings = current_winnings + betsize
betsize = initialbet
} else {
current_winnings = current_winnings - betsize
betsize = 2 * betsize
}
winnings[i] = current_winnings
}
winnings
}
ntimes = 30
m = data.frame(time = seq(ntimes))
m$winnings = play(doublebet, nplayers = 1, ntimes = ntimes)
g = ggplot() + labs(title = "The Martingale Strategy in Roulette", caption = "Simulated winnings over time for a single roulette player following the basic martingale betting strategy.")
g = g + geom_line(aes(time, winnings), data = m)
print(g)
# View(m)
doublebet = function(x, initialbet = 1, strategy = even)
{
winnings = rep(NA, length(x))
betsize = initialbet
current_winnings = 0
for(i in seq_along(x)){
if(strategy(x[i]) == 1){
current_winnings = current_winnings + betsize
betsize = initialbet
} else {
current_winnings = current_winnings - betsize
betsize = 2 * betsize
}
winnings[i] = current_winnings
}
winnings
}
ntimes = 30
m = data.frame(time = seq(ntimes))
m$winnings = play(doublebet, nplayers = 1, ntimes = ntimes)
g = ggplot() + labs(title = "The Martingale Strategy in Roulette", caption = "Simulated winnings over time for a single roulette player following the basic martingale betting strategy.")
g = g + geom_line(aes(time, winnings), data = m)
print(g)
# View(m)
ntimes = 1000
m = data.frame(time = seq(ntimes))
m$winnings = play(doublebet, nplayers = 1, ntimes = ntimes)
g = ggplot() + labs(title = "The Martingale Strategy in Roulette", caption = "Simulated winnings over time for a single roulette player following the basic martingale betting strategy.")
g = g + geom_line(aes(time, winnings), data = m)
print(g)
# View(m)
ntimes = 1000
m = data.frame(time = seq(ntimes))
m$winnings = play(doublebet, nplayers = 1, ntimes = ntimes)
g = ggplot() + labs(title = "The Martingale Strategy in Roulette", caption = "Simulated winnings over time for a single roulette player following the basic martingale betting strategy.")
g = g + geom_line(aes(time, winnings), data = m)
print(g)
# View(m)
ntimes = 1000
m = data.frame(time = seq(ntimes))
m$winnings = play(doublebet, nplayers = 1, ntimes = ntimes)
g = ggplot() + labs(title = "The Martingale Strategy in Roulette", caption = "Simulated winnings over time for a single roulette player following the basic martingale betting strategy.")
g = g + geom_line(aes(time, winnings), data = m)
print(g)
# View(m)
ntimes = 1000
m = data.frame(time = seq(ntimes))
m$winnings = play(doublebet, nplayers = 1, ntimes = ntimes)
g = ggplot() + labs(title = "The Martingale Strategy in Roulette", caption = "Simulated winnings over time for a single roulette player following the basic martingale betting strategy.")
g = g + geom_line(aes(time, winnings), data = m)
for(i in 1:5) {
m$winnings = play(doublebet, nplayers = 1, ntimes = ntimes)
g = ggplot() + labs(title = "The Martingale Strategy in Roulette", caption = "Simulated winnings over time for a single roulette player following the basic martingale betting strategy.")
g = g + geom_line(aes(time, winnings), data = m)
}
print(g)
# View(m)
ntimes = 1000
m = data.frame(time = seq(ntimes))
m$winnings = play(doublebet, nplayers = 1, ntimes = ntimes)
g = ggplot() + labs(title = "The Martingale Strategy in Roulette", caption = "Simulated winnings over time for a single roulette player following the basic martingale betting strategy.")
g = g + geom_line(aes(time, winnings), data = m)
for(i in 1:5) {
m$winnings = play(doublebet, nplayers = 1, ntimes = ntimes)
g = g + geom_line(aes(time, winnings), data = m, alpha = .2)
}
print(g)
# View(m)
ntimes = 1000
m = data.frame(time = seq(ntimes))
m$winnings = play(doublebet, nplayers = 1, ntimes = ntimes)
m$average = m$winnings
count = 1
g = ggplot() + labs(title = "The Martingale Strategy in Roulette", caption = "Simulated winnings over time for a single roulette player following the basic martingale betting strategy.")
g = g + geom_line(aes(time, winnings), data = m, alpha = .2)
for(i in 1:4) {
m$winnings = play(doublebet, nplayers = 1, ntimes = ntimes)
m$average = m$average + m$winnings
count = count + 1
g = g + geom_line(aes(time, winnings), data = m, alpha = .2)
}
m$average = m$average / count
g = g + geom_abline(aes(time, average), data = m, color = "blue")
print(g)
ntimes = 1000
m = data.frame(time = seq(ntimes))
m$winnings = play(doublebet, nplayers = 1, ntimes = ntimes)
m$average = m$winnings
count = 1
g = ggplot() + labs(title = "The Martingale Strategy in Roulette", caption = "Simulated winnings over time for a single roulette player following the basic martingale betting strategy.")
g = g + geom_line(aes(time, winnings), data = m, alpha = .2)
for(i in 1:4) {
m$winnings = play(doublebet, nplayers = 1, ntimes = ntimes)
m$average = m$average + m$winnings
count = count + 1
g = g + geom_line(aes(time, winnings), data = m, alpha = .2)
}
m$average = m$average / count
g = g + geom_line(aes(time, average), data = m, color = "blue")
print(g)
# View(m)
ntimes = 1000
m = data.frame(time = seq(ntimes))
m$winnings = play(doublebet, nplayers = 1, ntimes = ntimes)
m$average = m$winnings
count = 1
g = ggplot() + labs(title = "The Martingale Strategy in Roulette", caption = "Simulated winnings over time for a single roulette player following the basic martingale betting strategy.")
g = g + geom_line(aes(time, winnings), data = m, alpha = .2)
for(i in 1:4) {
m$winnings = play(doublebet, nplayers = 1, ntimes = ntimes)
m$average = m$average + m$winnings
count = count + 1
g = g + geom_line(aes(time, winnings), data = m, alpha = .2)
}
m$average = m$average / count
g = g + geom_line(aes(time, average), data = m, color = "blue")
print(g)
# View(m)
ntimes = 1000
m = data.frame(time = seq(ntimes))
m$winnings = play(doublebet, nplayers = 1, ntimes = ntimes)
m$average = m$winnings
count = 1
g = ggplot() + labs(title = "The Martingale Strategy in Roulette", caption = "Simulated winnings over time for a single roulette player following the basic martingale betting strategy.")
g = g + geom_line(aes(time, winnings), data = m, alpha = .2)
for(i in 1:4) {
m$winnings = play(doublebet, nplayers = 1, ntimes = ntimes)
m$average = m$average + m$winnings
count = count + 1
g = g + geom_line(aes(time, winnings), data = m, alpha = .2)
}
m$average = m$average / count
g = g + geom_line(aes(time, average), data = m, color = "blue")
print(g)
# View(m)
ntimes = 1000
m = data.frame(time = seq(ntimes))
m$winnings = play(doublebet, nplayers = 1, ntimes = ntimes)
m$average = m$winnings
count = 1
g = ggplot() + labs(title = "The Martingale Strategy in Roulette", caption = "Simulated winnings over time for a single roulette player following the basic martingale betting strategy.")
g = g + geom_line(aes(time, winnings), data = m, alpha = .2)
for(i in 1:4) {
m$winnings = play(doublebet, nplayers = 1, ntimes = ntimes)
m$average = m$average + m$winnings
count = count + 1
g = g + geom_line(aes(time, winnings), data = m, alpha = .2)
}
m$average = m$average / count
g = g + geom_line(aes(time, average), data = m, color = "blue")
print(g)
# View(m)
ntimes = 1000
m = data.frame(time = seq(ntimes))
m$winnings = play(doublebet, nplayers = 1, ntimes = ntimes)
m$average = m$winnings
count = 1
g = ggplot() + labs(title = "The Martingale Strategy in Roulette", caption = "Simulated winnings over time for a single roulette player following the basic martingale betting strategy.")
g = g + geom_line(aes(time, winnings), data = m, alpha = .2)
for(i in 1:4) {
m$winnings = play(doublebet, nplayers = 1, ntimes = ntimes)
m$average = m$average + m$winnings
count = count + 1
g = g + geom_line(aes(time, winnings), data = m, alpha = .2)
}
m$average = m$average / count
g = g + geom_line(aes(time, average), data = m, color = "blue")
print(g)
# View(m)
# View(m)
print(count)
ntimes = 1000
m = data.frame(time = seq(ntimes))
m$winnings = play(doublebet, nplayers = 1, ntimes = ntimes)
m$average = m$winnings
count = 1
g = ggplot() + labs(title = "The Martingale Strategy in Roulette", caption = "Simulated winnings over time for a single roulette player following the basic martingale betting strategy.")
g = g + geom_line(aes(time, winnings), data = m, alpha = .2)
for(i in 1:3) {
m$winnings = play(doublebet, nplayers = 1, ntimes = ntimes)
m$average = m$average + m$winnings
count = count + 1
g = g + geom_line(aes(time, winnings), data = m, alpha = .2)
}
m$average = m$average / count
g = g + geom_line(aes(time, average), data = m, color = "blue")
print(g)
# View(m)
print(count)
doublebet = function(x, initialbet = 1, strategy = low)
{
winnings = rep(NA, length(x))
betsize = initialbet
current_winnings = 0
for(i in seq_along(x)){
if(strategy(x[i]) == 1){
current_winnings = current_winnings + betsize
betsize = initialbet
} else {
current_winnings = current_winnings - betsize
betsize = 2 * betsize
}
winnings[i] = current_winnings
}
winnings
}
ntimes = 30
m = data.frame(time = seq(ntimes))
m$winnings = play(doublebet, nplayers = 1, ntimes = ntimes)
doublebet = function(x, initialbet = 1, strategy = high)
{
winnings = rep(NA, length(x))
betsize = initialbet
current_winnings = 0
for(i in seq_along(x)){
if(strategy(x[i]) == 1){
current_winnings = current_winnings + betsize
betsize = initialbet
} else {
current_winnings = current_winnings - betsize
betsize = 2 * betsize
}
winnings[i] = current_winnings
}
winnings
}
ntimes = 30
m = data.frame(time = seq(ntimes))
m$winnings = play(doublebet, nplayers = 1, ntimes = ntimes)
g = ggplot() + labs(title = "The Martingale Strategy in Roulette", caption = "Simulated winnings over time for a single roulette player following the basic martingale betting strategy.")
g = g + geom_line(aes(time, winnings), data = m)
print(g)
# View(m)
ntimes = 1000
m = data.frame(time = seq(ntimes))
m$winnings = play(doublebet, nplayers = 1, ntimes = ntimes)
m$average = m$winnings
count = 1
g = ggplot() + labs(title = "The Martingale Strategy in Roulette", caption = "Simulated winnings over time for a single roulette player following the basic martingale betting strategy.")
g = g + geom_line(aes(time, winnings), data = m, alpha = .2)
for(i in 1:3) {
m$winnings = play(doublebet, nplayers = 1, ntimes = ntimes)
m$average = m$average + m$winnings
count = count + 1
g = g + geom_line(aes(time, winnings), data = m, alpha = .2)
}
m$average = m$average / count
g = g + geom_line(aes(time, average), data = m, color = "blue")
print(g)
# View(m)
print(count)
doublebet = function(x, initialbet = 1, strategy = even)
{
winnings = rep(NA, length(x))
betsize = initialbet
current_winnings = 0
for(i in seq_along(x)){
if(strategy(x[i]) == 1){
current_winnings = current_winnings + betsize
betsize = initialbet
} else {
current_winnings = current_winnings - betsize
betsize = 2 * betsize
}
winnings[i] = current_winnings
}
winnings
}
ntimes = 30
m = data.frame(time = seq(ntimes))
m$winnings = play(doublebet, nplayers = 1, ntimes = ntimes)
g = ggplot() + labs(title = "The Martingale Strategy in Roulette", caption = "Simulated winnings over time for a single roulette player following the basic martingale betting strategy.")
g = g + geom_line(aes(time, winnings), data = m)
print(g)
# View(m)
ntimes = 1000
m = data.frame(time = seq(ntimes))
m$winnings = play(doublebet, nplayers = 1, ntimes = ntimes)
m$average = m$winnings
count = 1
g = ggplot() + labs(title = "The Martingale Strategy in Roulette", caption = "Simulated winnings over time for a single roulette player following the basic martingale betting strategy.")
g = g + geom_line(aes(time, winnings), data = m, alpha = .2)
for(i in 1:3) {
m$winnings = play(doublebet, nplayers = 1, ntimes = ntimes)
m$average = m$average + m$winnings
count = count + 1
g = g + geom_line(aes(time, winnings), data = m, alpha = .2)
}
m$average = m$average / count
g = g + geom_line(aes(time, average), data = m, color = "blue")
print(g)
ntimes = 30000
m = data.frame(time = seq(ntimes))
m$winnings = play(doublebet, nplayers = 1, ntimes = ntimes)
g = ggplot() + labs(title = "The Martingale Strategy in Roulette", caption = "Simulated winnings over time for a single roulette player following the basic martingale betting strategy.")
g = g + geom_line(aes(time, winnings), data = m)
print(g)
# View(m)
ntimes = 30
m = data.frame(time = seq(ntimes))
m$winnings = play(doublebet, nplayers = 1, ntimes = ntimes)
g = ggplot() + labs(title = "The Martingale Strategy in Roulette", caption = "Simulated winnings over time for a single roulette player following the basic martingale betting strategy.")
g = g + geom_line(aes(time, winnings), data = m)
print(g)
# View(m)
```{r}
even = function(x)
{
win = (x %% 2 == 0) & (x != 0)
ifelse(win, 1, -1)
}
high = function(x)
{
win = (18 < x) & (x != 0)
ifelse(win, 1, -1)
}
column1 = function(x)
{
ifelse(x %% 3 == 1, 2, -1)
}
straightup = function(x, d = 1)
{
ifelse(x == d, 35, -1)
}
# Construct a simple betting strategy
simple_strategy = function(bet = even)
{
function(x) cumsum(bet(x))
}
#' Simulate plays from a betting strategy
#'
#' @param strategy
#' @param nplayers number of players to use this strategy
#' @param ntimes number of times each player should play
play = function(strategy = simple_strategy()
, nplayers = 100L
, ntimes = 1000L
, ballvalues = 0:36
){
replicate(nplayers, strategy(sample(ballvalues, size = ntimes, replace = TRUE)))
}
library(ggplot2)
theme_set(theme_bw())  # Feel free to set different themes
set.seed(42)
ntimes = 1000
d = data.frame(time = seq(ntimes))
s = simple_strategy(straightup)
d$winnings = play(s, nplayers = 1, ntimes = ntimes)
g = ggplot() + labs(title = "Single game of roulette", caption = "Simulated winnings over time for a single roulette player betting one dollar on evens every time.")
g = g + geom_line(aes(time, winnings), data = d, alpha=.2)
# average
count = 1
d$average = d$winnings
for(i in 2:100) {
set.seed(i)
ntimes = 1000
#d = data.frame(time = seq(ntimes))
s = simple_strategy(straightup)
column_name = paste(c("winnings",i), collapse="")
d$winnings = play(s, nplayers = 1, ntimes = ntimes)
g = g + geom_line(aes(time, winnings), data = d, alpha=.2)
# average
count = count + 1
d$average = d$average + d$winnings
}
g = g + geom_abline(slope = 0, intercept = 0, col = "blue")
print(g)
